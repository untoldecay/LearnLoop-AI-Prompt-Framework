# Windsurf Code Generation Rules

# These rules define the coding style and practices to be followed when generating code

# Code Style:
#    - Use 4 spaces for indentation
#    - Maximum line length: 100 characters
#    - Use meaningful variable and function names
#    - Add descriptive comments for complex logic

Documentation:
   - Include docstrings for all functions and classes
   - Document parameters and return values
   - Add inline comments for non-obvious code sections

Error Handling:
   - Use try-except blocks for error-prone operations
   - Provide meaningful error messages
   - Log errors appropriately

# 4. Testing:
#    - Write unit tests for new functions
#    - Include edge cases in tests
#    - Maintain test coverage

Security:
   - Never expose sensitive information in code
   - Use environment variables for secrets
   - Validate user inputs
   - Follow secure coding practices

Performance:
   - Optimize resource-intensive operations
   - Use appropriate data structures
   - Consider memory usage

Maintainability:
   - Keep functions focused and single-purpose
   - Follow DRY (Don't Repeat Yourself) principle
   - Use design patterns appropriately
   - Maintain clean architecture

Version control with Git:
   - use the following prefixes for commit messages followed by a colon and a space
      - "fix" for bug fixes
      - "feat" for new features
      - "perf" for performance improvements
      - "docs" for documentation changes
      - "style" for formatting changes
      - "refactor" for code refactoring
      - "test" for adding missing tests
      - "chore" for chore tasks
   - when determining the commit message prefix, pick the most relevant prefix from the list above
   - use lower case for commit messages
   - the commit message should also include a list of the changes made in the commit after the summary line if the changes are not self explanatory
